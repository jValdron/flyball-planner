basePath: /api
definitions:
  models.Practice:
    type: object
  models.Set:
    properties:
      id:
        type: string
      order:
        type: integer
      practiceID:
        type: string
      setDogs:
        items:
          $ref: '#/definitions/models.SetDog'
        type: array
    type: object
  models.SetDog:
    properties:
      dogID:
        type: string
      lane:
        type: string
      order:
        type: integer
      setID:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for managing flyball practice sessions
  title: Flyball Practice Planner API
  version: "1.0"
paths:
  /practices:
    get:
      description: Get a list of all practice sessions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Practice'
            type: array
      summary: Get all practices
      tags:
      - practices
    post:
      consumes:
      - application/json
      description: Create a new practice session
      parameters:
      - description: Practice object
        in: body
        name: practice
        required: true
        schema:
          $ref: '#/definitions/models.Practice'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Practice'
      summary: Create a new practice
      tags:
      - practices
  /practices/{id}:
    delete:
      description: Delete a practice session
      parameters:
      - description: Practice ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
      summary: Delete a practice
      tags:
      - practices
    get:
      description: Get a specific practice session by its ID
      parameters:
      - description: Practice ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Practice'
      summary: Get a practice by ID
      tags:
      - practices
    put:
      consumes:
      - application/json
      description: Update an existing practice session
      parameters:
      - description: Practice ID
        in: path
        name: id
        required: true
        type: string
      - description: Practice object
        in: body
        name: practice
        required: true
        schema:
          $ref: '#/definitions/models.Practice'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Practice'
      summary: Update a practice
      tags:
      - practices
  /practices/{practiceID}/sets:
    get:
      description: Get a list of all sets within a practice
      parameters:
      - description: Practice ID
        in: path
        name: practiceID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Set'
            type: array
      summary: Get all sets in a practice
      tags:
      - sets
    post:
      consumes:
      - application/json
      description: Create a new set within a practice
      parameters:
      - description: Practice ID
        in: path
        name: practiceID
        required: true
        type: string
      - description: Set object
        in: body
        name: set
        required: true
        schema:
          $ref: '#/definitions/models.Set'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Set'
      summary: Create a new set
      tags:
      - sets
  /practices/{practiceID}/sets/{id}:
    delete:
      description: Delete a set
      parameters:
      - description: Set ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
      summary: Delete a set
      tags:
      - sets
    get:
      description: Get a specific set by its ID
      parameters:
      - description: Set ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Set'
      summary: Get a set by ID
      tags:
      - sets
    put:
      consumes:
      - application/json
      description: Update an existing set
      parameters:
      - description: Set ID
        in: path
        name: id
        required: true
        type: string
      - description: Set object
        in: body
        name: set
        required: true
        schema:
          $ref: '#/definitions/models.Set'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Set'
      summary: Update a set
      tags:
      - sets
  /practices/{practiceID}/sets/{setID}/setdogs/reorder:
    put:
      consumes:
      - application/json
      description: Update the order of dogs within a set
      parameters:
      - description: Practice ID
        in: path
        name: practiceID
        required: true
        type: string
      - description: Set ID
        in: path
        name: setID
        required: true
        type: string
      - description: Array of dog orders
        in: body
        name: dogOrder
        required: true
        schema:
          type: array
      responses:
        "200":
          description: OK
      summary: Reorder dogs in a set
      tags:
      - sets
  /practices/{practiceID}/sets/reorder:
    put:
      consumes:
      - application/json
      description: Update the order of sets within a practice
      parameters:
      - description: Practice ID
        in: path
        name: practiceID
        required: true
        type: string
      - description: Array of set orders
        in: body
        name: setOrder
        required: true
        schema:
          type: array
      responses:
        "200":
          description: OK
      summary: Reorder sets in a practice
      tags:
      - sets
swagger: "2.0"

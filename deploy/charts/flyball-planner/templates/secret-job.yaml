{{- if or (and .Values.graphql.jwtSecret.enabled (not .Values.graphql.jwtSecret.existingSecret)) (and .Values.postgresql.enabled (not .Values.postgresql.auth.existingSecret)) }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "flyball-planner.fullname" . }}-secret-generator
  labels:
    {{- include "flyball-planner.labels" . | nindent 4 }}
    app.kubernetes.io/component: secret-generator
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-delete
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        {{- include "flyball-planner.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: jwt-secret-generator
    spec:
      serviceAccountName: {{ include "flyball-planner.fullname" . }}-secret-generator
      restartPolicy: Never
      containers:
      - name: secret-generator
        image: "{{ .Values.secretGenerator.image.repository }}:{{ .Values.secretGenerator.image.tag | default "latest" }}"
        imagePullPolicy: {{ .Values.secretGenerator.image.pullPolicy }}
        env:
        - name: NAMESPACE
          value: "{{ .Release.Namespace }}"
        - name: HOOK_TYPE
          value: "{{ .Release.Hook }}"
        {{- if and .Values.graphql.jwtSecret.enabled (not .Values.graphql.jwtSecret.existingSecret) }}
        - name: JWT_SECRET_NAME
          value: "{{ include "flyball-planner.fullname" . }}-jwt-secret"
        {{- end }}
        {{- if and .Values.postgresql.enabled (not .Values.postgresql.auth.existingSecret) }}
        - name: POSTGRES_SECRET_NAME
          value: "{{ include "flyball-planner.fullname" . }}-postgresql-secret"
        {{- end }}
        resources:
          limits:
            memory: "64Mi"
            cpu: "100m"
          requests:
            memory: "32Mi"
            cpu: "50m"
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
{{- end }}

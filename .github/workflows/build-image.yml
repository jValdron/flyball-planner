name: Build and Push Container Images

on:
  push:
    branches:
      - main
    paths:
      - 'assets/**'
      - 'frontend/**'
      - 'graphql/**'
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  version-check:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract tag version
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/}
          # Remove 'v' prefix if present
          TAG_VERSION=${TAG_VERSION#v}
          echo "TAG_VERSION=$TAG_VERSION" >> $GITHUB_ENV
          echo "Extracted tag version: $TAG_VERSION"

      - name: Check frontend package.json version
        run: |
          FRONTEND_VERSION=$(jq -r '.version' frontend/package.json)
          echo "Frontend version: $FRONTEND_VERSION"
          echo "Tag version: $TAG_VERSION"
          if [ "$FRONTEND_VERSION" != "$TAG_VERSION" ]; then
            echo "❌ Frontend package.json version ($FRONTEND_VERSION) does not match tag version ($TAG_VERSION)"
            exit 1
          fi
          echo "✅ Frontend version matches tag"

      - name: Check graphql package.json version
        run: |
          GRAPHQL_VERSION=$(jq -r '.version' graphql/package.json)
          echo "GraphQL version: $GRAPHQL_VERSION"
          echo "Tag version: $TAG_VERSION"
          if [ "$GRAPHQL_VERSION" != "$TAG_VERSION" ]; then
            echo "❌ GraphQL package.json version ($GRAPHQL_VERSION) does not match tag version ($TAG_VERSION)"
            exit 1
          fi
          echo "✅ GraphQL version matches tag"

  build-and-push:
    runs-on: ubuntu-latest
    needs: version-check
    if: always() && (needs.version-check.result == 'success' || !startsWith(github.ref, 'refs/tags/'))
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set lowercase repo name
        run: echo "REPO_NAME=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

      - name: Build and push Graphql image
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          context: ./graphql
          push: true
          tags: |
            ghcr.io/${{ env.REPO_NAME }}/graphql:latest
            ghcr.io/${{ env.REPO_NAME }}/graphql:${{ github.ref_name }}

      - name: Build and push Frontend image
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          context: ./frontend
          push: true
          tags: |
            ghcr.io/${{ env.REPO_NAME }}/frontend:latest
            ghcr.io/${{ env.REPO_NAME }}/frontend:${{ github.ref_name }}
